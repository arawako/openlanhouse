#!/usr/bin/env python2
# -*- coding: utf-8 -*-
#
#  Copyright (C) 2011 Wilson Pinto JÃºnior <wilsonpjunior@gmail.com>
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation, either version 3 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.

import sys
import os
import logging
import getopt
import threading
import gettext
from openlh.daemon.globals import *
from openlh.daemon.main import Daemon
_ = gettext.gettext

disable_autodebug = False
verbose = False
debug_color = "auto"

try:
    opts, args = getopt.getopt(sys.argv[1:], 'hvp:', ['help', 'verbose=',
        'version', 'debugcolor='])

except getopt.error(msg):
    print(msg)
    print(_('for help use --help'))
    sys.exit(2)

for o, a in opts:

    if o in ('-h', '--help'):
        print(sys.argv[0], '[--help] [--verbose] [--debugcolor] [--version]')

        sys.exit()

    elif o == '--verbose':
        
        verbose = False
        
        if a == "on":
            verbose = True
            disable_autodebug = False
        elif a == "off":
            verbose = False
            disable_autodebug = True
        else:
            disable_autodebug = False
    
    elif o == '--version':
        print APP_NAME, APP_VERSION
        sys.exit()
    
    if o == '--debugcolor':
        debug_color = a
    else:
        debug_color = "auto"

#Setup config backend
try:
    from openlh.core.config_client import config_init
except ImportError:
    print _('Required Module not found\n\n'
            'OpenLanhouse needs \'openlh.core\' to run. Please install '
            'the compatible version of this package.')
    sys.exit(3)

from openlh.daemon.defaults import defaults
config_init("openlh-daemon", CONFIG_FILE, defaults)

from openlh.core.os_utils import rename_process, mkdir, pid_alive

#Check OpenlhServer is already running
if pid_alive('openlh-daemon', PID_FILE):
    print (_('OpenLanhouse-Daemon is already running'))
    sys.exit(3)

CONFIG_PATH_EXISTS = os.path.exists(CONFIG_PATH)

#Check Avatars Path
if not os.path.exists(AVATARS_PATH):
    mkdir(AVATARS_PATH)

if not os.path.exists(REGISTRATION_PATH):
    mkdir(REGISTRATION_PATH)

pid_dir =  os.path.dirname(PID_FILE)
if not os.path.exists(pid_dir):
    mkdir(pid_dir)

f = open(PID_FILE, 'w').write(str(os.getpid()))
rename_process('openlh-daemon')

if __name__ == "__main__":
    app = Daemon()
    app.run()
